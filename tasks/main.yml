---
- name: Create traefik system group
  ansible.builtin.group:
    name: "{{ traefik_group }}"
    state: present
    system: true

- name: Create traefik system user account
  ansible.builtin.user:
    name: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    home: "{{ traefik_data }}"
    create_home: false
    shell: /bin/false
    state: present
    system: true

- name: Create traefik directories and acme storage
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
    owner: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    mode: "{{ item.mode }}"
    access_time: preserve
    modification_time: preserve
  loop:
    - mode: "0750"
      state: directory
      path: "{{ traefik_data }}"
    - mode: "0750"
      state: directory
      path: "{{ traefik_data }}/conf.d"
    - mode: "0600"
      state: touch
      path: "{{ traefik_data }}/acme.json"
  loop_control:
    label: "{{ item.path }}"

- name: Pull Traefik docker image
  community.docker.docker_image:
    name: "{{ traefik_image }}"
    source: pull
    tag: "{{ traefik_imagetag }}"
  notify: Remove traefik

- name: Ensure all handlers run before continuing
  ansible.builtin.meta: flush_handlers

- name: Ensure Traefik container is created
  community.docker.docker_container:
    container_default_behavior: compatibility
    detach: true
    env: "{{ traefik_env }}"
    image: "{{ traefik_image }}:{{ traefik_imagetag }}"
    interactive: false
    labels: "{{ traefik_labels | default(omit) }}"
    name: "{{ traefik_name }}"
    network_mode: "{{ traefik_docker_network }}"
    privileged: true
    ports:
      - "{{ traefik_port }}:80"
      - "{{ traefik_port_ssl }}:443"
      - "8080:8080"
    restart_policy: always
    security_opts:
      - no-new-privileges:true
    state: present
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/ssl:/etc/ssl:ro
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates:ro
      - "{{ traefik_data }}:/etc/traefik"
  register: traefik_docker
  notify: Restart traefik

- name: Ensure traefik configuration file is present and configured
  ansible.builtin.template:
    dest: "{{ traefik_data }}/traefik.yml"
    src: traefik.yml.j2
    lstrip_blocks: true
    trim_blocks: true
    owner: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    mode: "0640"
  notify: Restart traefik

- name: Ensure dashboard configuration file is present and configured
  ansible.builtin.template:
    dest: "{{ traefik_data }}/conf.d/dashboard.yml"
    src: dashboard.yml.j2
    lstrip_blocks: true
    trim_blocks: true
    owner: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    mode: "0640"
  when: traefik_dashboard and not traefik_dashboard_insecure
  notify: Restart traefik

- name: Ensure default configuration files are present
  ansible.builtin.copy:
    content: "{{ item.conf | to_yaml(indent=2) }}"
    dest: "{{ traefik_data }}/conf.d/{{ item.name }}.yml"
    group: "{{ traefik_group }}"
    mode: "0640"
    owner: "{{ traefik_user }}"
  loop: "{{ traefik_default_config }}"
  when: traefik_default_config | length > 0
  notify: Restart traefik

- name: Ensure custom configuration files are present
  ansible.builtin.copy:
    content: "{{ item.conf | to_yaml(indent=2) }}"
    dest: "{{ traefik_data }}/conf.d/{{ item.name }}.yml"
    group: "{{ traefik_group }}"
    mode: "0640"
    owner: "{{ traefik_user }}"
  loop: "{{ traefik_custom_config }}"
  when: traefik_custom_config | length > 0
  notify: Restart traefik

- name: Force all notified handlers to run at this point
  ansible.builtin.meta: flush_handlers
