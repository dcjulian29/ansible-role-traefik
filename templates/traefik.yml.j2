global:
  checkNewVersion: {{ traefik_check_new_version | quote | lower }}
  sendAnonymousUsage: {{ traefik_send_usage | quote | lower }}

entryPoints:
  web:
    address: :80
{% if traefik_https | bool %}
{% if traefik_https_redirect | bool %}
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
{% endif %}
  websecure:
    address: :443
    http:
      tls:
        {% if traefik_acme | bool %}
        certResolver: letsEncrypt
        domains: {{ traefik_acme_domains | to_json }}
        {% endif %}
      middlewares:
        - default-compress@file
        - default-security@file
{% endif %}

log:
  level: {{ traefik_log_level }}
  format: {{ traefik_log_format }}

{% if traefik_log_access %}
accessLog:
  format: {{ traefik_log_format }}

{% endif %}
api:
  insecure: false
  dashboard: {{ traefik_dashboard | quote | lower }}

providers:
  docker:
    endpoint: unix:///var/run/docker.sock
    exposedByDefault: {{ traefik_docker_default_expose | quote | lower }}

  file:
    directory: /etc/traefik/conf.d
    watch: true

{% if traefik_acme | bool %}
certificatesResolvers:
  letsEncrypt:
    acme:
      email: {{ traefik_acme_email }}
      storage: /etc/traefik/acme.json
{% if traefik_acme_server | length > 0 %}
      caServer: {{ traefik_acme_server }}
{% endif %}
{% if traefik_acme_challenge == 'dns' %}
      dnsChallenge:
        provider: {{ traefik_acme_dns_provider }}
        resolvers: {{ traefik_acme_dns_resolvers | to_json }}
        delayBeforeCheck: 10
        disablepropagationcheck: {{ traefik_acme_dns_disablepropagationcheck | to_json }}
{% elif traefik_acme_challenge == 'tls' %}
      tlsChallenge: {}
{% elif traefik_acme_challenge == 'http' %}
      httpChallenge:
        entryPoint: web
{% endif %}
{% endif %}
